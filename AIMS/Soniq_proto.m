function [methodinfo,structs,enuminfo,ThunkLibName]=Soniq_proto
%Soniq_proto: Create structures to define interfaces found in 'SoniqClientInterface'.

%This function was generated by loadlibrary.m parser version 1.1.6.34 on Tue Jun 24 12:35:00 2014
%perl options:'SoniqClientInterface.i -outfile=Soniq_proto.m'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival);
ThunkLibName=[];
% long ErrorInt (); 
fcns.name{fcnNum}='ErrorInt'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double ErrorDbl (); 
fcns.name{fcnNum}='ErrorDbl'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int Connected (); 
fcns.name{fcnNum}='Connected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetSoniqClientVersion ( char * value ); 
fcns.name{fcnNum}='GetSoniqClientVersion'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% int OpenSoniqConnection ( char * AHost ); 
fcns.name{fcnNum}='OpenSoniqConnection'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% int SoniqRunning (); 
fcns.name{fcnNum}='SoniqRunning'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int CloseSoniqConnection (); 
fcns.name{fcnNum}='CloseSoniqConnection'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetSoniqEXEPath ( char * value ); 
fcns.name{fcnNum}='GetSoniqEXEPath'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% long ShowPositionerDialog (); 
fcns.name{fcnNum}='ShowPositionerDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetShowPositionerStatusWindow ( int value ); 
fcns.name{fcnNum}='SetShowPositionerStatusWindow'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void SetPositionerLowLimit ( long int axis , double value ); 
fcns.name{fcnNum}='SetPositionerLowLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% double GetPositionerLowLimit ( long int axis ); 
fcns.name{fcnNum}='GetPositionerLowLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetPositionerHighLimit ( long int axis , double value ); 
fcns.name{fcnNum}='SetPositionerHighLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% double GetPositionerHighLimit ( long int axis ); 
fcns.name{fcnNum}='GetPositionerHighLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetPositionerStepsPerSecond ( long int axis ); 
fcns.name{fcnNum}='GetPositionerStepsPerSecond'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetPositionerStepsPerSecond ( long int axis , long int value ); 
fcns.name{fcnNum}='SetPositionerStepsPerSecond'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'long'};fcnNum=fcnNum+1;
% void PositionerMoveRel ( long int axis , double value ); 
fcns.name{fcnNum}='PositionerMoveRel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% void PositionerMoveAbs ( long int axis , double value ); 
fcns.name{fcnNum}='PositionerMoveAbs'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% void SetPosition ( long int axis , double value ); 
fcns.name{fcnNum}='SetPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% double GetPosition ( long int axis ); 
fcns.name{fcnNum}='GetPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void FindLimitSwitch ( long int axis , int value ); 
fcns.name{fcnNum}='FindLimitSwitch'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'int32'};fcnNum=fcnNum+1;
% int GetLimitSwitchState ( long int axis , int value ); 
fcns.name{fcnNum}='GetLimitSwitchState'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'long', 'int32'};fcnNum=fcnNum+1;
% void GetPositionerModel ( char * value ); 
fcns.name{fcnNum}='GetPositionerModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetPositionerSerial ( char * value ); 
fcns.name{fcnNum}='GetPositionerSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetPositionerFirmwareVersion ( char * value ); 
fcns.name{fcnNum}='GetPositionerFirmwareVersion'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% int GetPositionerTranslation ( long int axis ); 
fcns.name{fcnNum}='GetPositionerTranslation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetPositionerTranslation ( long int axis , int value ); 
fcns.name{fcnNum}='SetPositionerTranslation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'int32'};fcnNum=fcnNum+1;
% void GetPositionerAxisName ( long int axis , char * value ); 
fcns.name{fcnNum}='GetPositionerAxisName'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void GetPositionerUnits ( long int axis , char * value ); 
fcns.name{fcnNum}='GetPositionerUnits'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% double GetPositionerScaleFactor ( long int axis ); 
fcns.name{fcnNum}='GetPositionerScaleFactor'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetPositionerAxisCount (); 
fcns.name{fcnNum}='GetPositionerAxisCount'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int GetPositionerReversed ( long int axis ); 
fcns.name{fcnNum}='GetPositionerReversed'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetPositionerReversed ( long int axis , int value ); 
fcns.name{fcnNum}='SetPositionerReversed'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'int32'};fcnNum=fcnNum+1;
% int GetUseMachineCoordinates (); 
fcns.name{fcnNum}='GetUseMachineCoordinates'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetUseMachineCoordinates ( int value ); 
fcns.name{fcnNum}='SetUseMachineCoordinates'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% long ShowScopeDialog (); 
fcns.name{fcnNum}='ShowScopeDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ShowScopeWaveformWindow ( int value ); 
fcns.name{fcnNum}='ShowScopeWaveformWindow'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void SetScopeSensitivity ( long int ch , double value ); 
fcns.name{fcnNum}='SetScopeSensitivity'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% double GetScopeSensitivity ( long int ch ); 
fcns.name{fcnNum}='GetScopeSensitivity'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetScopeOffset ( long int ch , double value ); 
fcns.name{fcnNum}='SetScopeOffset'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% double GetScopeOffset ( long int ch ); 
fcns.name{fcnNum}='GetScopeOffset'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetScopeCoupling ( long int ch , char * value ); 
fcns.name{fcnNum}='SetScopeCoupling'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void GetScopeCoupling ( long int ch , char * value ); 
fcns.name{fcnNum}='GetScopeCoupling'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void SetScopeProbe ( long int ch , double value ); 
fcns.name{fcnNum}='SetScopeProbe'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'double'};fcnNum=fcnNum+1;
% double GetScopeProbe ( long int ch ); 
fcns.name{fcnNum}='GetScopeProbe'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetScopeBWLimited ( long int ch , int value ); 
fcns.name{fcnNum}='SetScopeBWLimited'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'int32'};fcnNum=fcnNum+1;
% int GetScopeBWLimited ( long int ch ); 
fcns.name{fcnNum}='GetScopeBWLimited'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetScopeInverted ( long int ch , int value ); 
fcns.name{fcnNum}='SetScopeInverted'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'int32'};fcnNum=fcnNum+1;
% int GetScopeInverted ( long int ch ); 
fcns.name{fcnNum}='GetScopeInverted'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetScopeTimebase ( double value ); 
fcns.name{fcnNum}='SetScopeTimebase'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetScopeTimebase (); 
fcns.name{fcnNum}='GetScopeTimebase'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetScopeMinVPerDiv ( long int ch ); 
fcns.name{fcnNum}='GetScopeMinVPerDiv'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double GetScopeMaxVPerDiv ( long int ch ); 
fcns.name{fcnNum}='GetScopeMaxVPerDiv'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double GetScopeMinSecPerDiv (); 
fcns.name{fcnNum}='GetScopeMinSecPerDiv'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetScopeMaxSecPerDiv (); 
fcns.name{fcnNum}='GetScopeMaxSecPerDiv'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopeDelay ( double value ); 
fcns.name{fcnNum}='SetScopeDelay'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetScopeDelay (); 
fcns.name{fcnNum}='GetScopeDelay'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopePoints ( long int value ); 
fcns.name{fcnNum}='SetScopePoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetScopePoints (); 
fcns.name{fcnNum}='GetScopePoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetScopeMaxPoints (); 
fcns.name{fcnNum}='GetScopeMaxPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetScopeMaxAvailablePoints (); 
fcns.name{fcnNum}='GetScopeMaxAvailablePoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopeWFSource ( long int value ); 
fcns.name{fcnNum}='SetScopeWFSource'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetScopeWFSource (); 
fcns.name{fcnNum}='GetScopeWFSource'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopeWFAveraging ( long int value ); 
fcns.name{fcnNum}='SetScopeWFAveraging'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetScopeWFAveraging (); 
fcns.name{fcnNum}='GetScopeWFAveraging'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopeWFRemoteAveraging ( int value ); 
fcns.name{fcnNum}='SetScopeWFRemoteAveraging'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetScopeWFRemoteAveraging (); 
fcns.name{fcnNum}='GetScopeWFRemoteAveraging'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopeUseCorrelation ( int value ); 
fcns.name{fcnNum}='SetScopeUseCorrelation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetScopeUseCorrelation (); 
fcns.name{fcnNum}='GetScopeUseCorrelation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopeRealTime ( int value ); 
fcns.name{fcnNum}='SetScopeRealTime'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetScopeRealTime (); 
fcns.name{fcnNum}='GetScopeRealTime'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetScopeModel ( char * value ); 
fcns.name{fcnNum}='GetScopeModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetScopeSerial ( char * value ); 
fcns.name{fcnNum}='GetScopeSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetScopeFirmwareVersion ( char * value ); 
fcns.name{fcnNum}='GetScopeFirmwareVersion'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void ScopeWrite ( char * value ); 
fcns.name{fcnNum}='ScopeWrite'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void ScopeRead ( char * value ); 
fcns.name{fcnNum}='ScopeRead'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetScopeTriggerSource ( char * value ); 
fcns.name{fcnNum}='SetScopeTriggerSource'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetScopeTriggerSource ( char * value ); 
fcns.name{fcnNum}='GetScopeTriggerSource'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetScopeTriggerMode ( char * value ); 
fcns.name{fcnNum}='SetScopeTriggerMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetScopeTriggerMode ( char * value ); 
fcns.name{fcnNum}='GetScopeTriggerMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetScopeTriggerCoupling ( char * value ); 
fcns.name{fcnNum}='SetScopeTriggerCoupling'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetScopeTriggerCoupling ( char * value ); 
fcns.name{fcnNum}='GetScopeTriggerCoupling'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetScopeTriggerSlope ( int value ); 
fcns.name{fcnNum}='SetScopeTriggerSlope'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetScopeTriggerSlope (); 
fcns.name{fcnNum}='GetScopeTriggerSlope'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetScopeTriggerLevel ( double value ); 
fcns.name{fcnNum}='SetScopeTriggerLevel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetScopeTriggerLevel (); 
fcns.name{fcnNum}='GetScopeTriggerLevel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetScopeChannelCount (); 
fcns.name{fcnNum}='GetScopeChannelCount'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowFunctionGeneratorDialog (); 
fcns.name{fcnNum}='ShowFunctionGeneratorDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFunctionGeneratorFrequency ( double value ); 
fcns.name{fcnNum}='SetFunctionGeneratorFrequency'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFunctionGeneratorFrequency (); 
fcns.name{fcnNum}='GetFunctionGeneratorFrequency'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFunctionGeneratorVoltsPeakToPeak ( double value ); 
fcns.name{fcnNum}='SetFunctionGeneratorVoltsPeakToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFunctionGeneratorVoltsPeakToPeak (); 
fcns.name{fcnNum}='GetFunctionGeneratorVoltsPeakToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFunctionGeneratorOffset ( double value ); 
fcns.name{fcnNum}='SetFunctionGeneratorOffset'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFunctionGeneratorOffset (); 
fcns.name{fcnNum}='GetFunctionGeneratorOffset'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFunctionGeneratorFunction ( char * value ); 
fcns.name{fcnNum}='SetFunctionGeneratorFunction'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetFunctionGeneratorFunction ( char * value ); 
fcns.name{fcnNum}='GetFunctionGeneratorFunction'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetFunctionGeneratorMode ( char * value ); 
fcns.name{fcnNum}='SetFunctionGeneratorMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetFunctionGeneratorMode ( char * value ); 
fcns.name{fcnNum}='GetFunctionGeneratorMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetFunctionGeneratorBurstCount ( long int value ); 
fcns.name{fcnNum}='SetFunctionGeneratorBurstCount'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetFunctionGeneratorBurstCount (); 
fcns.name{fcnNum}='GetFunctionGeneratorBurstCount'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFunctionGeneratorPRF ( double value ); 
fcns.name{fcnNum}='SetFunctionGeneratorPRF'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFunctionGeneratorPRF (); 
fcns.name{fcnNum}='GetFunctionGeneratorPRF'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFunctionGeneratorEnabled ( int value ); 
fcns.name{fcnNum}='SetFunctionGeneratorEnabled'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetFunctionGeneratorEnabled (); 
fcns.name{fcnNum}='GetFunctionGeneratorEnabled'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetFunctionGeneratorModel ( char * value ); 
fcns.name{fcnNum}='GetFunctionGeneratorModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetFunctionGeneratorSerial ( char * value ); 
fcns.name{fcnNum}='GetFunctionGeneratorSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetFunctionGeneratorFirmwareVersion ( char * value ); 
fcns.name{fcnNum}='GetFunctionGeneratorFirmwareVersion'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void FunctionGeneratorWrite ( char * value ); 
fcns.name{fcnNum}='FunctionGeneratorWrite'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void FunctionGeneratorRead ( char * value ); 
fcns.name{fcnNum}='FunctionGeneratorRead'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% long ShowWaterConditionerDialog (); 
fcns.name{fcnNum}='ShowWaterConditionerDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetWaterConditionerMode ( long int value ); 
fcns.name{fcnNum}='SetWaterConditionerMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetWaterConditionerMode (); 
fcns.name{fcnNum}='GetWaterConditionerMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetWaterConditionerSetPoint ( double value ); 
fcns.name{fcnNum}='SetWaterConditionerSetPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetWaterConditionerSetPoint (); 
fcns.name{fcnNum}='GetWaterConditionerSetPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int GetWaterConditionerOK (); 
fcns.name{fcnNum}='GetWaterConditionerOK'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetWaterConditionerState (); 
fcns.name{fcnNum}='GetWaterConditionerState'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetWaterConditionerError (); 
fcns.name{fcnNum}='GetWaterConditionerError'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetWaterConditionerTemperature (); 
fcns.name{fcnNum}='GetWaterConditionerTemperature'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetWaterConditionerFlow (); 
fcns.name{fcnNum}='GetWaterConditionerFlow'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetWaterConditionerFirmwareVersion (); 
fcns.name{fcnNum}='GetWaterConditionerFirmwareVersion'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowMeasSetupDialog (); 
fcns.name{fcnNum}='ShowMeasSetupDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrModel ( char * value ); 
fcns.name{fcnNum}='SetXdcrModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetXdcrModel ( char * value ); 
fcns.name{fcnNum}='GetXdcrModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetXdcrSerial ( char * value ); 
fcns.name{fcnNum}='SetXdcrSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetXdcrSerial ( char * value ); 
fcns.name{fcnNum}='GetXdcrSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetSystemModel ( char * value ); 
fcns.name{fcnNum}='SetSystemModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetSystemModel ( char * value ); 
fcns.name{fcnNum}='GetSystemModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetSystemSerial ( char * value ); 
fcns.name{fcnNum}='SetSystemSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetSystemSerial ( char * value ); 
fcns.name{fcnNum}='GetSystemSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetSystemSoftwareRev ( char * value ); 
fcns.name{fcnNum}='SetSystemSoftwareRev'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetSystemSoftwareRev ( char * value ); 
fcns.name{fcnNum}='GetSystemSoftwareRev'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetXdcrMode ( char * value ); 
fcns.name{fcnNum}='SetXdcrMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetXdcrMode ( char * value ); 
fcns.name{fcnNum}='GetXdcrMode'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetXdcrFreqMHz ( double value ); 
fcns.name{fcnNum}='SetXdcrFreqMHz'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrFreqMHz (); 
fcns.name{fcnNum}='GetXdcrFreqMHz'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrPRFHz ( double value ); 
fcns.name{fcnNum}='SetXdcrPRFHz'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrPRFHz (); 
fcns.name{fcnNum}='GetXdcrPRFHz'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrPowermW ( double value ); 
fcns.name{fcnNum}='SetXdcrPowermW'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrPowermW (); 
fcns.name{fcnNum}='GetXdcrPowermW'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrBoundedPowermW ( double value ); 
fcns.name{fcnNum}='SetXdcrBoundedPowermW'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrBoundedPowermW (); 
fcns.name{fcnNum}='GetXdcrBoundedPowermW'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrScanned ( int value ); 
fcns.name{fcnNum}='SetXdcrScanned'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXdcrScanned (); 
fcns.name{fcnNum}='GetXdcrScanned'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrXDim ( double value ); 
fcns.name{fcnNum}='SetXdcrXDim'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrXDim (); 
fcns.name{fcnNum}='GetXdcrXDim'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrYDim ( double value ); 
fcns.name{fcnNum}='SetXdcrYDim'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrYDim (); 
fcns.name{fcnNum}='GetXdcrYDim'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrDiameter ( double value ); 
fcns.name{fcnNum}='SetXdcrDiameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrDiameter (); 
fcns.name{fcnNum}='GetXdcrDiameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrCircular ( int value ); 
fcns.name{fcnNum}='SetXdcrCircular'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXdcrCircular (); 
fcns.name{fcnNum}='GetXdcrCircular'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetXdcrApertureArea (); 
fcns.name{fcnNum}='GetXdcrApertureArea'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrApertureXWidth ( double value ); 
fcns.name{fcnNum}='SetXdcrApertureXWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrApertureXWidth (); 
fcns.name{fcnNum}='GetXdcrApertureXWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrFLX ( double value ); 
fcns.name{fcnNum}='SetXdcrFLX'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrFLX (); 
fcns.name{fcnNum}='GetXdcrFLX'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrFLY ( double value ); 
fcns.name{fcnNum}='SetXdcrFLY'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrFLY (); 
fcns.name{fcnNum}='GetXdcrFLY'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrCurvedArray ( int value ); 
fcns.name{fcnNum}='SetXdcrCurvedArray'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXdcrCurvedArray (); 
fcns.name{fcnNum}='GetXdcrCurvedArray'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrSectorScanner ( int value ); 
fcns.name{fcnNum}='SetXdcrSectorScanner'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXdcrSectorScanner (); 
fcns.name{fcnNum}='GetXdcrSectorScanner'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrRadius ( double value ); 
fcns.name{fcnNum}='SetXdcrRadius'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrRadius (); 
fcns.name{fcnNum}='GetXdcrRadius'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrLineSpacing ( double value ); 
fcns.name{fcnNum}='SetXdcrLineSpacing'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrLineSpacing (); 
fcns.name{fcnNum}='GetXdcrLineSpacing'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrLineIncrementalAngle ( double value ); 
fcns.name{fcnNum}='SetXdcrLineIncrementalAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrLineIncrementalAngle (); 
fcns.name{fcnNum}='GetXdcrLineIncrementalAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrLineCount ( long int value ); 
fcns.name{fcnNum}='SetXdcrLineCount'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetXdcrLineCount (); 
fcns.name{fcnNum}='GetXdcrLineCount'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrFrameRate ( double value ); 
fcns.name{fcnNum}='SetXdcrFrameRate'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXdcrFrameRate (); 
fcns.name{fcnNum}='GetXdcrFrameRate'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetXdcrZbpcm (); 
fcns.name{fcnNum}='GetXdcrZbpcm'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrCranialUse ( int value ); 
fcns.name{fcnNum}='SetXdcrCranialUse'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXdcrCranialUse (); 
fcns.name{fcnNum}='GetXdcrCranialUse'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXdcrControl ( long int index , char * value ); 
fcns.name{fcnNum}='SetXdcrControl'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void GetXdcrControl ( long int index , char * value ); 
fcns.name{fcnNum}='GetXdcrControl'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void HydrophoneClearSens (); 
fcns.name{fcnNum}='HydrophoneClearSens'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetHydrophoneFileName ( char * value ); 
fcns.name{fcnNum}='GetHydrophoneFileName'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void HydrophoneReadXLS ( char * value ); 
fcns.name{fcnNum}='HydrophoneReadXLS'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetHydrophoneModel ( char * value ); 
fcns.name{fcnNum}='SetHydrophoneModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetHydrophoneModel ( char * value ); 
fcns.name{fcnNum}='GetHydrophoneModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetHydrophoneSerial ( char * value ); 
fcns.name{fcnNum}='SetHydrophoneSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetHydrophoneSerial ( char * value ); 
fcns.name{fcnNum}='GetHydrophoneSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetPreampModel ( char * value ); 
fcns.name{fcnNum}='SetPreampModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetPreampModel ( char * value ); 
fcns.name{fcnNum}='GetPreampModel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetPreampSerial ( char * value ); 
fcns.name{fcnNum}='SetPreampSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetPreampSerial ( char * value ); 
fcns.name{fcnNum}='GetPreampSerial'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetHydrophoneVperMPa ( double value ); 
fcns.name{fcnNum}='SetHydrophoneVperMPa'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetHydrophoneVperMPa (); 
fcns.name{fcnNum}='GetHydrophoneVperMPa'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetHydrophoneInverted ( int value ); 
fcns.name{fcnNum}='SetHydrophoneInverted'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetHydrophoneInverted (); 
fcns.name{fcnNum}='GetHydrophoneInverted'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetUser ( char * value ); 
fcns.name{fcnNum}='SetUser'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetUser ( char * value ); 
fcns.name{fcnNum}='GetUser'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void ClearComments (); 
fcns.name{fcnNum}='ClearComments'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void AddComment ( char * value ); 
fcns.name{fcnNum}='AddComment'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void UserEditComments (); 
fcns.name{fcnNum}='UserEditComments'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetDeratingFactor (); 
fcns.name{fcnNum}='GetDeratingFactor'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowTankSetupDialog (); 
fcns.name{fcnNum}='ShowTankSetupDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetTemperature ( double value ); 
fcns.name{fcnNum}='SetTemperature'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetTemperature (); 
fcns.name{fcnNum}='GetTemperature'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetVelocity ( double value ); 
fcns.name{fcnNum}='SetVelocity'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetVelocity (); 
fcns.name{fcnNum}='GetVelocity'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetRoundTrip ( int value ); 
fcns.name{fcnNum}='SetRoundTrip'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetRoundTrip (); 
fcns.name{fcnNum}='GetRoundTrip'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetOrientationZAxis ( long int value ); 
fcns.name{fcnNum}='SetOrientationZAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetOrientationZAxis (); 
fcns.name{fcnNum}='GetOrientationZAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetOrientationXAxis ( long int value ); 
fcns.name{fcnNum}='SetOrientationXAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetOrientationXAxis (); 
fcns.name{fcnNum}='GetOrientationXAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetOrientationYAxis ( long int value ); 
fcns.name{fcnNum}='SetOrientationYAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetOrientationYAxis (); 
fcns.name{fcnNum}='GetOrientationYAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetOrientationAzAxis ( long int value ); 
fcns.name{fcnNum}='SetOrientationAzAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetOrientationAzAxis (); 
fcns.name{fcnNum}='GetOrientationAzAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetOrientationElevAxis ( long int value ); 
fcns.name{fcnNum}='SetOrientationElevAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetOrientationElevAxis (); 
fcns.name{fcnNum}='GetOrientationElevAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetDistanceTrackingEnabled ( int value ); 
fcns.name{fcnNum}='SetDistanceTrackingEnabled'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetDistanceTrackingEnabled (); 
fcns.name{fcnNum}='GetDistanceTrackingEnabled'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetUseDiagonal ( int value ); 
fcns.name{fcnNum}='SetUseDiagonal'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetUseDiagonal (); 
fcns.name{fcnNum}='GetUseDiagonal'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetDistanceTrackingOffset ( double value ); 
fcns.name{fcnNum}='SetDistanceTrackingOffset'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetDistanceTrackingOffset (); 
fcns.name{fcnNum}='GetDistanceTrackingOffset'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetDistanceTrackingDelay (); 
fcns.name{fcnNum}='GetDistanceTrackingDelay'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ApplyDistanceTracking (); 
fcns.name{fcnNum}='ApplyDistanceTracking'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXAngle ( double value ); 
fcns.name{fcnNum}='SetXAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXAngle (); 
fcns.name{fcnNum}='GetXAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetYAngle ( double value ); 
fcns.name{fcnNum}='SetYAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetYAngle (); 
fcns.name{fcnNum}='GetYAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZAngle ( double value ); 
fcns.name{fcnNum}='SetZAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZAngle (); 
fcns.name{fcnNum}='GetZAngle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetDataType ( char * value ); 
fcns.name{fcnNum}='GetDataType'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% int GetDataValid (); 
fcns.name{fcnNum}='GetDataValid'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void DigitizeWaveform (); 
fcns.name{fcnNum}='DigitizeWaveform'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetWaveformData ( double * data , long int count ); 
fcns.name{fcnNum}='GetWaveformData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% void GetPIIData ( double * data , long int count ); 
fcns.name{fcnNum}='GetPIIData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% void GetWaveformSpectrumData ( double * data , long int count ); 
fcns.name{fcnNum}='GetWaveformSpectrumData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% void SetWaveformTitle ( char * value ); 
fcns.name{fcnNum}='SetWaveformTitle'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% long GetWaveformPoints (); 
fcns.name{fcnNum}='GetWaveformPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetWaveformSpectrumPoints (); 
fcns.name{fcnNum}='GetWaveformSpectrumPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetWaveformSpectrumXMax (); 
fcns.name{fcnNum}='GetWaveformSpectrumXMax'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetWaveformDataPoint ( long int index ); 
fcns.name{fcnNum}='GetWaveformDataPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetWaveformAutoscale ( int value ); 
fcns.name{fcnNum}='SetWaveformAutoscale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetWaveformAutoscale (); 
fcns.name{fcnNum}='GetWaveformAutoscale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ClearWaveform (); 
fcns.name{fcnNum}='ClearWaveform'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetWaveformView ( char * value ); 
fcns.name{fcnNum}='SetWaveformView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetWaveformView ( char * value ); 
fcns.name{fcnNum}='GetWaveformView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void ClearWaveformParameters (); 
fcns.name{fcnNum}='ClearWaveformParameters'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void AddWaveformParameter ( char * value ); 
fcns.name{fcnNum}='AddWaveformParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetWaveformParameter ( long int index , char * value ); 
fcns.name{fcnNum}='GetWaveformParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% double GetWaveformParameterValue ( long int index ); 
fcns.name{fcnNum}='GetWaveformParameterValue'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double WaveformCalculate ( char * param ); 
fcns.name{fcnNum}='WaveformCalculate'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void CopyWaveformFcToSetupData (); 
fcns.name{fcnNum}='CopyWaveformFcToSetupData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Show1DScanDialog (); 
fcns.name{fcnNum}='Show1DScanDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Start1DScan (); 
fcns.name{fcnNum}='Start1DScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Get1DScanData ( double * data , long int count ); 
fcns.name{fcnNum}='Get1DScanData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% double Get1DScanDataPoint ( long int index ); 
fcns.name{fcnNum}='Get1DScanDataPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double Get1DScanPosition ( long int index ); 
fcns.name{fcnNum}='Get1DScanPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void Set1DScanAutoScale ( int value ); 
fcns.name{fcnNum}='Set1DScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get1DScanAutoScale (); 
fcns.name{fcnNum}='Get1DScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Clear1DScan (); 
fcns.name{fcnNum}='Clear1DScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanAxis ( long int value ); 
fcns.name{fcnNum}='Set1DScanAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get1DScanAxis (); 
fcns.name{fcnNum}='Get1DScanAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanPoints ( long int value ); 
fcns.name{fcnNum}='Set1DScanPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get1DScanPoints (); 
fcns.name{fcnNum}='Get1DScanPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanStart ( double value ); 
fcns.name{fcnNum}='Set1DScanStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get1DScanStart (); 
fcns.name{fcnNum}='Get1DScanStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanEnd ( double value ); 
fcns.name{fcnNum}='Set1DScanEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get1DScanEnd (); 
fcns.name{fcnNum}='Get1DScanEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanPause ( long int value ); 
fcns.name{fcnNum}='Set1DScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get1DScanPause (); 
fcns.name{fcnNum}='Get1DScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanAfterScan ( char * value ); 
fcns.name{fcnNum}='Set1DScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get1DScanAfterScan ( char * value ); 
fcns.name{fcnNum}='Get1DScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Clear1DScanParameters (); 
fcns.name{fcnNum}='Clear1DScanParameters'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Add1DScanParameter ( char * value ); 
fcns.name{fcnNum}='Add1DScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get1DScanParameter ( long int index , char * value ); 
fcns.name{fcnNum}='Get1DScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void Set1DScanSelected ( long int value ); 
fcns.name{fcnNum}='Set1DScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get1DScanSelected (); 
fcns.name{fcnNum}='Get1DScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanView ( char * value ); 
fcns.name{fcnNum}='Set1DScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get1DScanView ( char * value ); 
fcns.name{fcnNum}='Get1DScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void MoveTo1DScanPeak (); 
fcns.name{fcnNum}='MoveTo1DScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveTo1DScanDeratedPeak (); 
fcns.name{fcnNum}='MoveTo1DScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveTo1DScanLAM (); 
fcns.name{fcnNum}='MoveTo1DScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanPeak (); 
fcns.name{fcnNum}='Get1DScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanDeratedPeak (); 
fcns.name{fcnNum}='Get1DScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanLAM (); 
fcns.name{fcnNum}='Get1DScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanPeakLocation (); 
fcns.name{fcnNum}='Get1DScanPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanInterpolatedPeakLocation (); 
fcns.name{fcnNum}='Get1DScanInterpolatedPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Get1DScanPeakIndex (); 
fcns.name{fcnNum}='Get1DScanPeakIndex'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Get1DScanDeratedPeakIndex (); 
fcns.name{fcnNum}='Get1DScanDeratedPeakIndex'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Get1DScanLAMIndex (); 
fcns.name{fcnNum}='Get1DScanLAMIndex'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanDeratedPeakLocation (); 
fcns.name{fcnNum}='Get1DScanDeratedPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanLAMLocation (); 
fcns.name{fcnNum}='Get1DScanLAMLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get1DScanWidth ( double db_level ); 
fcns.name{fcnNum}='Get1DScanWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% int Get1DScanRecordWaveforms (); 
fcns.name{fcnNum}='Get1DScanRecordWaveforms'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set1DScanRecordWaveforms ( int value ); 
fcns.name{fcnNum}='Set1DScanRecordWaveforms'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void Set1DScanRealTimePlotting ( int value ); 
fcns.name{fcnNum}='Set1DScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get1DScanRealTimePlotting (); 
fcns.name{fcnNum}='Get1DScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowZScanDialog (); 
fcns.name{fcnNum}='ShowZScanDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long StartZScan (); 
fcns.name{fcnNum}='StartZScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetZScanData ( double * data , long int count ); 
fcns.name{fcnNum}='GetZScanData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% double GetZScanDataPoint ( long int index ); 
fcns.name{fcnNum}='GetZScanDataPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double GetZScanPosition ( long int index ); 
fcns.name{fcnNum}='GetZScanPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetZScanAutoScale ( int value ); 
fcns.name{fcnNum}='SetZScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZScanAutoScale (); 
fcns.name{fcnNum}='GetZScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZScanCalcPer62359Ed2 ( int value ); 
fcns.name{fcnNum}='SetZScanCalcPer62359Ed2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZScanCalcPer62359Ed2 (); 
fcns.name{fcnNum}='GetZScanCalcPer62359Ed2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ClearZScan (); 
fcns.name{fcnNum}='ClearZScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZScanPoints ( long int value ); 
fcns.name{fcnNum}='SetZScanPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZScanPoints (); 
fcns.name{fcnNum}='GetZScanPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZScanStart ( double value ); 
fcns.name{fcnNum}='SetZScanStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZScanStart (); 
fcns.name{fcnNum}='GetZScanStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZScanEnd ( double value ); 
fcns.name{fcnNum}='SetZScanEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZScanEnd (); 
fcns.name{fcnNum}='GetZScanEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZScanPause ( long int value ); 
fcns.name{fcnNum}='SetZScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZScanPause (); 
fcns.name{fcnNum}='GetZScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZScanAfterScan ( char * value ); 
fcns.name{fcnNum}='SetZScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetZScanAfterScan ( char * value ); 
fcns.name{fcnNum}='GetZScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetZScanSelected ( long int value ); 
fcns.name{fcnNum}='SetZScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZScanSelected (); 
fcns.name{fcnNum}='GetZScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetZScanParameter ( long int index , char * value ); 
fcns.name{fcnNum}='GetZScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void SetZScanView ( char * value ); 
fcns.name{fcnNum}='SetZScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetZScanView ( char * value ); 
fcns.name{fcnNum}='GetZScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void MoveToZScanPeak (); 
fcns.name{fcnNum}='MoveToZScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveToZScanDeratedPeak (); 
fcns.name{fcnNum}='MoveToZScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveToZScanLAM (); 
fcns.name{fcnNum}='MoveToZScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZScanPeak (); 
fcns.name{fcnNum}='GetZScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZScanDeratedPeak (); 
fcns.name{fcnNum}='GetZScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZScanLAM (); 
fcns.name{fcnNum}='GetZScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZScanPeakLocation (); 
fcns.name{fcnNum}='GetZScanPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZScanDeratedPeakLocation (); 
fcns.name{fcnNum}='GetZScanDeratedPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZScanLAMLocation (); 
fcns.name{fcnNum}='GetZScanLAMLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZScanWidth ( double db_level ); 
fcns.name{fcnNum}='GetZScanWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZScanCalcResult ( long int index ); 
fcns.name{fcnNum}='GetZScanCalcResult'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void GetZScanCalcLabel ( long int index , char * value ); 
fcns.name{fcnNum}='GetZScanCalcLabel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void GetZScanCalcUnits ( long int index , char * value ); 
fcns.name{fcnNum}='GetZScanCalcUnits'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void SetZScanRealTimePlotting ( int value ); 
fcns.name{fcnNum}='SetZScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZScanRealTimePlotting (); 
fcns.name{fcnNum}='GetZScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Show2DScanDialog (); 
fcns.name{fcnNum}='Show2DScanDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Start2DScan (); 
fcns.name{fcnNum}='Start2DScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Get2DScanData ( double * data , long int count ); 
fcns.name{fcnNum}='Get2DScanData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% double Get2DScanDataPoint ( long int index1 , long int index2 ); 
fcns.name{fcnNum}='Get2DScanDataPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long', 'long'};fcnNum=fcnNum+1;
% double Get2dScanFirstPosition ( long int index ); 
fcns.name{fcnNum}='Get2dScanFirstPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double Get2dScanSecondPosition ( long int index ); 
fcns.name{fcnNum}='Get2dScanSecondPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void Set2DScanAutoScale ( int value ); 
fcns.name{fcnNum}='Set2DScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get2DScanAutoScale (); 
fcns.name{fcnNum}='Get2DScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Clear2DScan (); 
fcns.name{fcnNum}='Clear2DScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanFirstAxis ( long int value ); 
fcns.name{fcnNum}='Set2DScanFirstAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanFirstAxis (); 
fcns.name{fcnNum}='Get2DScanFirstAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanSecondAxis ( long int value ); 
fcns.name{fcnNum}='Set2DScanSecondAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanSecondAxis (); 
fcns.name{fcnNum}='Get2DScanSecondAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanFirstPoints ( long int value ); 
fcns.name{fcnNum}='Set2DScanFirstPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanFirstPoints (); 
fcns.name{fcnNum}='Get2DScanFirstPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanSecondPoints ( long int value ); 
fcns.name{fcnNum}='Set2DScanSecondPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanSecondPoints (); 
fcns.name{fcnNum}='Get2DScanSecondPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanFirstStart ( double value ); 
fcns.name{fcnNum}='Set2DScanFirstStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanFirstStart (); 
fcns.name{fcnNum}='Get2DScanFirstStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanSecondStart ( double value ); 
fcns.name{fcnNum}='Set2DScanSecondStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanSecondStart (); 
fcns.name{fcnNum}='Get2DScanSecondStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanFirstEnd ( double value ); 
fcns.name{fcnNum}='Set2DScanFirstEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanFirstEnd (); 
fcns.name{fcnNum}='Get2DScanFirstEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanSecondEnd ( double value ); 
fcns.name{fcnNum}='Set2DScanSecondEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanSecondEnd (); 
fcns.name{fcnNum}='Get2DScanSecondEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanPause ( long int value ); 
fcns.name{fcnNum}='Set2DScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanPause (); 
fcns.name{fcnNum}='Get2DScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanElliptical ( int value ); 
fcns.name{fcnNum}='Set2DScanElliptical'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get2DScanElliptical (); 
fcns.name{fcnNum}='Get2DScanElliptical'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanAfterScan ( char * value ); 
fcns.name{fcnNum}='Set2DScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get2DScanAfterScan ( char * value ); 
fcns.name{fcnNum}='Get2DScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Clear2DScanParameters (); 
fcns.name{fcnNum}='Clear2DScanParameters'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Add2DScanParameter ( char * value ); 
fcns.name{fcnNum}='Add2DScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get2DScanParameter ( long int index , char * value ); 
fcns.name{fcnNum}='Get2DScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void Set2DScanSelected ( long int value ); 
fcns.name{fcnNum}='Set2DScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanSelected (); 
fcns.name{fcnNum}='Get2DScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanColorScheme ( char * value ); 
fcns.name{fcnNum}='Set2DScanColorScheme'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get2DScanColorScheme ( char * value ); 
fcns.name{fcnNum}='Get2DScanColorScheme'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Set2DScanAltitude ( long int value ); 
fcns.name{fcnNum}='Set2DScanAltitude'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanAltitude (); 
fcns.name{fcnNum}='Get2DScanAltitude'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanAzimuth ( long int value ); 
fcns.name{fcnNum}='Set2DScanAzimuth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get2DScanAzimuth (); 
fcns.name{fcnNum}='Get2DScanAzimuth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanKeepAspectRatio ( int value ); 
fcns.name{fcnNum}='Set2DScanKeepAspectRatio'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get2DScanKeepAspectRatio (); 
fcns.name{fcnNum}='Get2DScanKeepAspectRatio'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanViewPerspective ( int value ); 
fcns.name{fcnNum}='Set2DScanViewPerspective'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get2DScanViewPerspective (); 
fcns.name{fcnNum}='Get2DScanViewPerspective'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanView ( char * value ); 
fcns.name{fcnNum}='Set2DScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get2DScanView ( char * value ); 
fcns.name{fcnNum}='Get2DScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Set2DScanViewWater ( int value ); 
fcns.name{fcnNum}='Set2DScanViewWater'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void Set2DScanViewDerated ( int value ); 
fcns.name{fcnNum}='Set2DScanViewDerated'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get2DScanViewDerated (); 
fcns.name{fcnNum}='Get2DScanViewDerated'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int Get2DScanViewWater (); 
fcns.name{fcnNum}='Get2DScanViewWater'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveTo2DScanPeak (); 
fcns.name{fcnNum}='MoveTo2DScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveTo2DScanDeratedPeak (); 
fcns.name{fcnNum}='MoveTo2DScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveTo2DScanLAM (); 
fcns.name{fcnNum}='MoveTo2DScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanPeak (); 
fcns.name{fcnNum}='Get2DScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanDeratedPeak (); 
fcns.name{fcnNum}='Get2DScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanLAM (); 
fcns.name{fcnNum}='Get2DScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanFirstPeakLocation (); 
fcns.name{fcnNum}='Get2DScanFirstPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanFirstDeratedPeakLocation (); 
fcns.name{fcnNum}='Get2DScanFirstDeratedPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanFirstLAMLocation (); 
fcns.name{fcnNum}='Get2DScanFirstLAMLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanSecondPeakLocation (); 
fcns.name{fcnNum}='Get2DScanSecondPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanSecondDeratedPeakLocation (); 
fcns.name{fcnNum}='Get2DScanSecondDeratedPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanSecondLAMLocation (); 
fcns.name{fcnNum}='Get2DScanSecondLAMLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double Get2DScanPower ( double db_limit ); 
fcns.name{fcnNum}='Get2DScanPower'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanFirstWidth ( double db_limit ); 
fcns.name{fcnNum}='Get2DScanFirstWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanSecondWidth ( double db_limit ); 
fcns.name{fcnNum}='Get2DScanSecondWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanArea ( double db_limit ); 
fcns.name{fcnNum}='Get2DScanArea'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get2DScanIntegrationLimit (); 
fcns.name{fcnNum}='Get2DScanIntegrationLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanIntegrationLimit ( double value ); 
fcns.name{fcnNum}='Set2DScanIntegrationLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% void Copy2DScanPowerToSetupData (); 
fcns.name{fcnNum}='Copy2DScanPowerToSetupData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int Get2DScanRecordWaveforms (); 
fcns.name{fcnNum}='Get2DScanRecordWaveforms'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set2DScanRecordWaveforms ( int value ); 
fcns.name{fcnNum}='Set2DScanRecordWaveforms'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void Set2DScanRealTimePlotting ( int value ); 
fcns.name{fcnNum}='Set2DScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get2DScanRealTimePlotting (); 
fcns.name{fcnNum}='Get2DScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowXYScanDialog (); 
fcns.name{fcnNum}='ShowXYScanDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long StartXYScan (); 
fcns.name{fcnNum}='StartXYScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetXYScanData ( double * data , long int count ); 
fcns.name{fcnNum}='GetXYScanData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% double GetXYScanDataPoint ( long int x , long int y ); 
fcns.name{fcnNum}='GetXYScanDataPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long', 'long'};fcnNum=fcnNum+1;
% double GetXYScanXPosition ( long int x ); 
fcns.name{fcnNum}='GetXYScanXPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double GetXYScanYPosition ( long int y ); 
fcns.name{fcnNum}='GetXYScanYPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetXYScanAutoScale ( int value ); 
fcns.name{fcnNum}='SetXYScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXYScanAutoScale (); 
fcns.name{fcnNum}='GetXYScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ClearXYScan (); 
fcns.name{fcnNum}='ClearXYScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanXPoints ( long int value ); 
fcns.name{fcnNum}='SetXYScanXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetXYScanXPoints (); 
fcns.name{fcnNum}='GetXYScanXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanYPoints ( long int value ); 
fcns.name{fcnNum}='SetXYScanYPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetXYScanYPoints (); 
fcns.name{fcnNum}='GetXYScanYPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanXStart ( double value ); 
fcns.name{fcnNum}='SetXYScanXStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanXStart (); 
fcns.name{fcnNum}='GetXYScanXStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanYStart ( double value ); 
fcns.name{fcnNum}='SetXYScanYStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanYStart (); 
fcns.name{fcnNum}='GetXYScanYStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanXEnd ( double value ); 
fcns.name{fcnNum}='SetXYScanXEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanXEnd (); 
fcns.name{fcnNum}='GetXYScanXEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanYEnd ( double value ); 
fcns.name{fcnNum}='SetXYScanYEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanYEnd (); 
fcns.name{fcnNum}='GetXYScanYEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanPause ( long int value ); 
fcns.name{fcnNum}='SetXYScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetXYScanPause (); 
fcns.name{fcnNum}='GetXYScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanElliptical ( int value ); 
fcns.name{fcnNum}='SetXYScanElliptical'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXYScanElliptical (); 
fcns.name{fcnNum}='GetXYScanElliptical'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanAfterScan ( char * value ); 
fcns.name{fcnNum}='SetXYScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetXYScanAfterScan ( char * value ); 
fcns.name{fcnNum}='GetXYScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetXYScanColorScheme ( char * value ); 
fcns.name{fcnNum}='SetXYScanColorScheme'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetXYScanColorScheme ( char * value ); 
fcns.name{fcnNum}='GetXYScanColorScheme'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetXYScanAltitude ( long int value ); 
fcns.name{fcnNum}='SetXYScanAltitude'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetXYScanAltitude (); 
fcns.name{fcnNum}='GetXYScanAltitude'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanAzimuth ( long int value ); 
fcns.name{fcnNum}='SetXYScanAzimuth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetXYScanAzimuth (); 
fcns.name{fcnNum}='GetXYScanAzimuth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanKeepAspectRatio ( int value ); 
fcns.name{fcnNum}='SetXYScanKeepAspectRatio'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXYScanKeepAspectRatio (); 
fcns.name{fcnNum}='GetXYScanKeepAspectRatio'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanViewPerspective ( int value ); 
fcns.name{fcnNum}='SetXYScanViewPerspective'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXYScanViewPerspective (); 
fcns.name{fcnNum}='GetXYScanViewPerspective'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanView ( char * value ); 
fcns.name{fcnNum}='SetXYScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetXYScanView ( char * value ); 
fcns.name{fcnNum}='GetXYScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void MoveToXYScanPeak (); 
fcns.name{fcnNum}='MoveToXYScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetXYScanPeak (); 
fcns.name{fcnNum}='GetXYScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetXYScanXPeakLocation (); 
fcns.name{fcnNum}='GetXYScanXPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetXYScanYPeakLocation (); 
fcns.name{fcnNum}='GetXYScanYPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetXYScanPower ( double db_limit ); 
fcns.name{fcnNum}='GetXYScanPower'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanXWidth ( double db_limit ); 
fcns.name{fcnNum}='GetXYScanXWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanYWidth ( double db_limit ); 
fcns.name{fcnNum}='GetXYScanYWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanArea ( double db_limit ); 
fcns.name{fcnNum}='GetXYScanArea'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetXYScanIntegrationLimit (); 
fcns.name{fcnNum}='GetXYScanIntegrationLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanIntegrationLimit ( double value ); 
fcns.name{fcnNum}='SetXYScanIntegrationLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% void CopyXYScanPowerToSetupData (); 
fcns.name{fcnNum}='CopyXYScanPowerToSetupData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetXYScanRealTimePlotting ( int value ); 
fcns.name{fcnNum}='SetXYScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetXYScanRealTimePlotting (); 
fcns.name{fcnNum}='GetXYScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowZXScanDialog (); 
fcns.name{fcnNum}='ShowZXScanDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long StartZXScan (); 
fcns.name{fcnNum}='StartZXScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetZXScanData ( double * data , long int count ); 
fcns.name{fcnNum}='GetZXScanData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% double GetZXScanDataPoint ( long int z , long int x ); 
fcns.name{fcnNum}='GetZXScanDataPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long', 'long'};fcnNum=fcnNum+1;
% double GetZXScanXPosition ( long int z ); 
fcns.name{fcnNum}='GetZXScanXPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double GetZXScanZPosition ( long int x ); 
fcns.name{fcnNum}='GetZXScanZPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetZXScanAutoScale ( int value ); 
fcns.name{fcnNum}='SetZXScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZXScanAutoScale (); 
fcns.name{fcnNum}='GetZXScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ClearZXScan (); 
fcns.name{fcnNum}='ClearZXScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanZPoints ( long int value ); 
fcns.name{fcnNum}='SetZXScanZPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZXScanZPoints (); 
fcns.name{fcnNum}='GetZXScanZPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanXPoints ( long int value ); 
fcns.name{fcnNum}='SetZXScanXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZXScanXPoints (); 
fcns.name{fcnNum}='GetZXScanXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanZStart ( double value ); 
fcns.name{fcnNum}='SetZXScanZStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZXScanZStart (); 
fcns.name{fcnNum}='GetZXScanZStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanXStart ( double value ); 
fcns.name{fcnNum}='SetZXScanXStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZXScanXStart (); 
fcns.name{fcnNum}='GetZXScanXStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanZEnd ( double value ); 
fcns.name{fcnNum}='SetZXScanZEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZXScanZEnd (); 
fcns.name{fcnNum}='GetZXScanZEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanXEnd ( double value ); 
fcns.name{fcnNum}='SetZXScanXEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZXScanXEnd (); 
fcns.name{fcnNum}='GetZXScanXEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanPause ( long int value ); 
fcns.name{fcnNum}='SetZXScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZXScanPause (); 
fcns.name{fcnNum}='GetZXScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanAfterScan ( char * value ); 
fcns.name{fcnNum}='SetZXScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetZXScanAfterScan ( char * value ); 
fcns.name{fcnNum}='GetZXScanAfterScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetZXScanSelected ( long int value ); 
fcns.name{fcnNum}='SetZXScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZXScanSelected (); 
fcns.name{fcnNum}='GetZXScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanColorScheme ( char * value ); 
fcns.name{fcnNum}='SetZXScanColorScheme'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetZXScanColorScheme ( char * value ); 
fcns.name{fcnNum}='GetZXScanColorScheme'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetZXScanAltitude ( long int value ); 
fcns.name{fcnNum}='SetZXScanAltitude'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZXScanAltitude (); 
fcns.name{fcnNum}='GetZXScanAltitude'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanAzimuth ( long int value ); 
fcns.name{fcnNum}='SetZXScanAzimuth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetZXScanAzimuth (); 
fcns.name{fcnNum}='GetZXScanAzimuth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanKeepAspectRatio ( int value ); 
fcns.name{fcnNum}='SetZXScanKeepAspectRatio'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZXScanKeepAspectRatio (); 
fcns.name{fcnNum}='GetZXScanKeepAspectRatio'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanViewPerspective ( int value ); 
fcns.name{fcnNum}='SetZXScanViewPerspective'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZXScanViewPerspective (); 
fcns.name{fcnNum}='GetZXScanViewPerspective'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanView ( char * value ); 
fcns.name{fcnNum}='SetZXScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetZXScanView ( char * value ); 
fcns.name{fcnNum}='GetZXScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetZXScanViewWater ( int value ); 
fcns.name{fcnNum}='SetZXScanViewWater'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void SetZXScanViewDerated ( int value ); 
fcns.name{fcnNum}='SetZXScanViewDerated'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZXScanViewDerated (); 
fcns.name{fcnNum}='GetZXScanViewDerated'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int GetZXScanViewWater (); 
fcns.name{fcnNum}='GetZXScanViewWater'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveToZXScanPeak (); 
fcns.name{fcnNum}='MoveToZXScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveToZXScanDeratedPeak (); 
fcns.name{fcnNum}='MoveToZXScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void MoveToZXScanLAM (); 
fcns.name{fcnNum}='MoveToZXScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanPeak (); 
fcns.name{fcnNum}='GetZXScanPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanDeratedPeak (); 
fcns.name{fcnNum}='GetZXScanDeratedPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanLAM (); 
fcns.name{fcnNum}='GetZXScanLAM'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanZPeakLocation (); 
fcns.name{fcnNum}='GetZXScanZPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanZDeratedPeakLocation (); 
fcns.name{fcnNum}='GetZXScanZDeratedPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanZLAMLocation (); 
fcns.name{fcnNum}='GetZXScanZLAMLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanXPeakLocation (); 
fcns.name{fcnNum}='GetZXScanXPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanXDeratedPeakLocation (); 
fcns.name{fcnNum}='GetZXScanXDeratedPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanXLAMLocation (); 
fcns.name{fcnNum}='GetZXScanXLAMLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetZXScanZWidth ( double db_limit ); 
fcns.name{fcnNum}='GetZXScanZWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZXScanXWidth ( double db_limit ); 
fcns.name{fcnNum}='GetZXScanXWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetZXScanIspta3 (); 
fcns.name{fcnNum}='GetZXScanIspta3'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetZXScanRealTimePlotting ( int value ); 
fcns.name{fcnNum}='SetZXScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetZXScanRealTimePlotting (); 
fcns.name{fcnNum}='GetZXScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Show3DScanDialog (); 
fcns.name{fcnNum}='Show3DScanDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Start3DScan (); 
fcns.name{fcnNum}='Start3DScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Get3DScanData ( double * data , long int count ); 
fcns.name{fcnNum}='Get3DScanData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'long'};fcnNum=fcnNum+1;
% void Set3DScanAutoScale ( int value ); 
fcns.name{fcnNum}='Set3DScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get3DScanAutoScale (); 
fcns.name{fcnNum}='Get3DScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Clear3DScan (); 
fcns.name{fcnNum}='Clear3DScan'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanXPoints ( long int value ); 
fcns.name{fcnNum}='Set3DScanXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get3DScanXPoints (); 
fcns.name{fcnNum}='Get3DScanXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanYPoints ( long int value ); 
fcns.name{fcnNum}='Set3DScanYPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get3DScanYPoints (); 
fcns.name{fcnNum}='Get3DScanYPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanZPoints ( long int value ); 
fcns.name{fcnNum}='Set3DScanZPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get3DScanZPoints (); 
fcns.name{fcnNum}='Get3DScanZPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanXStart ( double value ); 
fcns.name{fcnNum}='Set3DScanXStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get3DScanXStart (); 
fcns.name{fcnNum}='Get3DScanXStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanYStart ( double value ); 
fcns.name{fcnNum}='Set3DScanYStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get3DScanYStart (); 
fcns.name{fcnNum}='Get3DScanYStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanZStart ( double value ); 
fcns.name{fcnNum}='Set3DScanZStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get3DScanZStart (); 
fcns.name{fcnNum}='Get3DScanZStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanXEnd ( double value ); 
fcns.name{fcnNum}='Set3DScanXEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get3DScanXEnd (); 
fcns.name{fcnNum}='Get3DScanXEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanYEnd ( double value ); 
fcns.name{fcnNum}='Set3DScanYEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get3DScanYEnd (); 
fcns.name{fcnNum}='Get3DScanYEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanZEnd ( double value ); 
fcns.name{fcnNum}='Set3DScanZEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double Get3DScanZEnd (); 
fcns.name{fcnNum}='Get3DScanZEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanZIndex ( long int value ); 
fcns.name{fcnNum}='Set3DScanZIndex'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get3DScanZIndex (); 
fcns.name{fcnNum}='Get3DScanZIndex'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanPause ( long int value ); 
fcns.name{fcnNum}='Set3DScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get3DScanPause (); 
fcns.name{fcnNum}='Get3DScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanElliptical ( int value ); 
fcns.name{fcnNum}='Set3DScanElliptical'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get3DScanElliptical (); 
fcns.name{fcnNum}='Get3DScanElliptical'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Clear3DScanParameters (); 
fcns.name{fcnNum}='Clear3DScanParameters'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Add3DScanParameter ( char * value ); 
fcns.name{fcnNum}='Add3DScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Get3DScanParameter ( long int index , char * value ); 
fcns.name{fcnNum}='Get3DScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% void Set3DScanSelected ( long int value ); 
fcns.name{fcnNum}='Set3DScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long Get3DScanSelected (); 
fcns.name{fcnNum}='Get3DScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Set3DScanRealTimePlotting ( int value ); 
fcns.name{fcnNum}='Set3DScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int Get3DScanRealTimePlotting (); 
fcns.name{fcnNum}='Get3DScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowFreqScanDialog (); 
fcns.name{fcnNum}='ShowFreqScanDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanAutoScale ( int value ); 
fcns.name{fcnNum}='SetFreqScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetFreqScanAutoScale (); 
fcns.name{fcnNum}='GetFreqScanAutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanStart ( double value ); 
fcns.name{fcnNum}='SetFreqScanStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFreqScanStart (); 
fcns.name{fcnNum}='GetFreqScanStart'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanEnd ( double value ); 
fcns.name{fcnNum}='SetFreqScanEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFreqScanEnd (); 
fcns.name{fcnNum}='GetFreqScanEnd'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanPoints ( long int value ); 
fcns.name{fcnNum}='SetFreqScanPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetFreqScanPoints (); 
fcns.name{fcnNum}='GetFreqScanPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanXLog ( int value ); 
fcns.name{fcnNum}='SetFreqScanXLog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetFreqScanXLog (); 
fcns.name{fcnNum}='GetFreqScanXLog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanTrackFrequency ( int value ); 
fcns.name{fcnNum}='SetFreqScanTrackFrequency'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetFreqScanTrackFrequency (); 
fcns.name{fcnNum}='GetFreqScanTrackFrequency'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanDesiredCycles ( long int value ); 
fcns.name{fcnNum}='SetFreqScanDesiredCycles'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetFreqScanDesiredCycles (); 
fcns.name{fcnNum}='GetFreqScanDesiredCycles'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanPause ( long int value ); 
fcns.name{fcnNum}='SetFreqScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetFreqScanPause (); 
fcns.name{fcnNum}='GetFreqScanPause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ClearFreqScanParameters (); 
fcns.name{fcnNum}='ClearFreqScanParameters'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void AddFreqScanParameter ( char * value ); 
fcns.name{fcnNum}='AddFreqScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetFreqScanParameter ( long int index , char * value ); 
fcns.name{fcnNum}='GetFreqScanParameter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'cstring'};fcnNum=fcnNum+1;
% long FreqScanStartRef (); 
fcns.name{fcnNum}='FreqScanStartRef'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long FreqScanStartMeas (); 
fcns.name{fcnNum}='FreqScanStartMeas'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetFreqScanData ( long int which_data , double * data , long int count ); 
fcns.name{fcnNum}='GetFreqScanData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long', 'doublePtr', 'long'};fcnNum=fcnNum+1;
% double GetFreqScanDataPoint ( long int which_data , long int index ); 
fcns.name{fcnNum}='GetFreqScanDataPoint'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long', 'long'};fcnNum=fcnNum+1;
% double GetFreqScanFrequency ( long int index ); 
fcns.name{fcnNum}='GetFreqScanFrequency'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetFreqScanSelected ( long int value ); 
fcns.name{fcnNum}='SetFreqScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetFreqScanSelected (); 
fcns.name{fcnNum}='GetFreqScanSelected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFreqScanView ( char * value ); 
fcns.name{fcnNum}='SetFreqScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetFreqScanView ( char * value ); 
fcns.name{fcnNum}='GetFreqScanView'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetFreqScanRealTimePlotting ( int value ); 
fcns.name{fcnNum}='SetFreqScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetFreqScanRealTimePlotting (); 
fcns.name{fcnNum}='GetFreqScanRealTimePlotting'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowFindPulseDialog (); 
fcns.name{fcnNum}='ShowFindPulseDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void FindPulseAutoMinMax (); 
fcns.name{fcnNum}='FindPulseAutoMinMax'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFindPulseMinDelay ( double value ); 
fcns.name{fcnNum}='SetFindPulseMinDelay'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFindPulseMinDelay (); 
fcns.name{fcnNum}='GetFindPulseMinDelay'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetFindPulseMaxDelay ( double value ); 
fcns.name{fcnNum}='SetFindPulseMaxDelay'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetFindPulseMaxDelay (); 
fcns.name{fcnNum}='GetFindPulseMaxDelay'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void FindPulse (); 
fcns.name{fcnNum}='FindPulse'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void AutoScale (); 
fcns.name{fcnNum}='AutoScale'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowSearchDialog (); 
fcns.name{fcnNum}='ShowSearchDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSearchAxis ( long int value ); 
fcns.name{fcnNum}='SetSearchAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetSearchAxis (); 
fcns.name{fcnNum}='GetSearchAxis'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSearchStartPos ( double value ); 
fcns.name{fcnNum}='SetSearchStartPos'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetSearchStartPos (); 
fcns.name{fcnNum}='GetSearchStartPos'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSearchEndPos ( double value ); 
fcns.name{fcnNum}='SetSearchEndPos'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetSearchEndPos (); 
fcns.name{fcnNum}='GetSearchEndPos'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSearchPoints ( long int value ); 
fcns.name{fcnNum}='SetSearchPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetSearchPoints (); 
fcns.name{fcnNum}='GetSearchPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSearchdBLevel ( double value ); 
fcns.name{fcnNum}='SetSearchdBLevel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetSearchdBLevel (); 
fcns.name{fcnNum}='GetSearchdBLevel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSearchSetToZero ( int value ); 
fcns.name{fcnNum}='SetSearchSetToZero'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetSearchSetToZero (); 
fcns.name{fcnNum}='GetSearchSetToZero'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSearchAlignToPeak ( int value ); 
fcns.name{fcnNum}='SetSearchAlignToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetSearchAlignToPeak (); 
fcns.name{fcnNum}='GetSearchAlignToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetSearchPeakLocation (); 
fcns.name{fcnNum}='GetSearchPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetSearchCenter (); 
fcns.name{fcnNum}='GetSearchCenter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int GetSearchValid (); 
fcns.name{fcnNum}='GetSearchValid'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long StartSearch (); 
fcns.name{fcnNum}='StartSearch'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowPlaneSearchDialog (); 
fcns.name{fcnNum}='ShowPlaneSearchDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetPlaneSearchXPoints ( long int value ); 
fcns.name{fcnNum}='SetPlaneSearchXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetPlaneSearchXPoints (); 
fcns.name{fcnNum}='GetPlaneSearchXPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetPlaneSearchXWidth ( double value ); 
fcns.name{fcnNum}='SetPlaneSearchXWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetPlaneSearchXWidth (); 
fcns.name{fcnNum}='GetPlaneSearchXWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetPlaneSearchYPoints ( long int value ); 
fcns.name{fcnNum}='SetPlaneSearchYPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetPlaneSearchYPoints (); 
fcns.name{fcnNum}='GetPlaneSearchYPoints'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetPlaneSearchYWidth ( double value ); 
fcns.name{fcnNum}='SetPlaneSearchYWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetPlaneSearchYWidth (); 
fcns.name{fcnNum}='GetPlaneSearchYWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetPlaneSearchdBLevel ( double value ); 
fcns.name{fcnNum}='SetPlaneSearchdBLevel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetPlaneSearchdBLevel (); 
fcns.name{fcnNum}='GetPlaneSearchdBLevel'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetPlaneSearchSetToZero ( int value ); 
fcns.name{fcnNum}='SetPlaneSearchSetToZero'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetPlaneSearchSetToZero (); 
fcns.name{fcnNum}='GetPlaneSearchSetToZero'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetPlaneSearchAlignToPeak ( int value ); 
fcns.name{fcnNum}='SetPlaneSearchAlignToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetPlaneSearchAlignToPeak (); 
fcns.name{fcnNum}='GetPlaneSearchAlignToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int GetPlaneSearchValid (); 
fcns.name{fcnNum}='GetPlaneSearchValid'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetPlaneSearchXPeakLocation (); 
fcns.name{fcnNum}='GetPlaneSearchXPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetPlaneSearchXCenter (); 
fcns.name{fcnNum}='GetPlaneSearchXCenter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetPlaneSearchYPeakLocation (); 
fcns.name{fcnNum}='GetPlaneSearchYPeakLocation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetPlaneSearchYCenter (); 
fcns.name{fcnNum}='GetPlaneSearchYCenter'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long StartPlaneSearch (); 
fcns.name{fcnNum}='StartPlaneSearch'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long ShowBeamAlignmentDialog (); 
fcns.name{fcnNum}='ShowBeamAlignmentDialog'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentZ1 ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentZ1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentZ1 (); 
fcns.name{fcnNum}='GetBeamAlignmentZ1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentXRange1 ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentXRange1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentXRange1 (); 
fcns.name{fcnNum}='GetBeamAlignmentXRange1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentYRange1 ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentYRange1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentYRange1 (); 
fcns.name{fcnNum}='GetBeamAlignmentYRange1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentXPoints1 ( long int value ); 
fcns.name{fcnNum}='SetBeamAlignmentXPoints1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetBeamAlignmentXPoints1 (); 
fcns.name{fcnNum}='GetBeamAlignmentXPoints1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentYPoints1 ( long int value ); 
fcns.name{fcnNum}='SetBeamAlignmentYPoints1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetBeamAlignmentYPoints1 (); 
fcns.name{fcnNum}='GetBeamAlignmentYPoints1'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentZ2 ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentZ2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentZ2 (); 
fcns.name{fcnNum}='GetBeamAlignmentZ2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentXRange2 ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentXRange2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentXRange2 (); 
fcns.name{fcnNum}='GetBeamAlignmentXRange2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentYRange2 ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentYRange2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentYRange2 (); 
fcns.name{fcnNum}='GetBeamAlignmentYRange2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentXPoints2 ( long int value ); 
fcns.name{fcnNum}='SetBeamAlignmentXPoints2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetBeamAlignmentXPoints2 (); 
fcns.name{fcnNum}='GetBeamAlignmentXPoints2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentYPoints2 ( long int value ); 
fcns.name{fcnNum}='SetBeamAlignmentYPoints2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetBeamAlignmentYPoints2 (); 
fcns.name{fcnNum}='GetBeamAlignmentYPoints2'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentXLimit ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentXLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentXLimit (); 
fcns.name{fcnNum}='GetBeamAlignmentXLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentYLimit ( double value ); 
fcns.name{fcnNum}='SetBeamAlignmentYLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'double'};fcnNum=fcnNum+1;
% double GetBeamAlignmentYLimit (); 
fcns.name{fcnNum}='GetBeamAlignmentYLimit'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentMaxTries ( long int value ); 
fcns.name{fcnNum}='SetBeamAlignmentMaxTries'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetBeamAlignmentMaxTries (); 
fcns.name{fcnNum}='GetBeamAlignmentMaxTries'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentNZPositions ( long int value ); 
fcns.name{fcnNum}='SetBeamAlignmentNZPositions'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetBeamAlignmentNZPositions (); 
fcns.name{fcnNum}='GetBeamAlignmentNZPositions'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentAlignToPeak ( int value ); 
fcns.name{fcnNum}='SetBeamAlignmentAlignToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetBeamAlignmentAlignToPeak (); 
fcns.name{fcnNum}='GetBeamAlignmentAlignToPeak'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long StartBeamAlignment (); 
fcns.name{fcnNum}='StartBeamAlignment'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void ChangeDir ( char * value ); 
fcns.name{fcnNum}='ChangeDir'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void Dir ( char * value ); 
fcns.name{fcnNum}='Dir'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void MakeDir ( char * value ); 
fcns.name{fcnNum}='MakeDir'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void MakeNewDir (); 
fcns.name{fcnNum}='MakeNewDir'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long Save (); 
fcns.name{fcnNum}='Save'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long SaveAutoName (); 
fcns.name{fcnNum}='SaveAutoName'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long SaveFileAs ( char * value ); 
fcns.name{fcnNum}='SaveFileAs'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetFileName ( char * value ); 
fcns.name{fcnNum}='GetFileName'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetShortFileName ( char * value ); 
fcns.name{fcnNum}='GetShortFileName'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% long Read ( char * value ); 
fcns.name{fcnNum}='Read'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% long ReadData ( char * value ); 
fcns.name{fcnNum}='ReadData'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void CloseFile (); 
fcns.name{fcnNum}='CloseFile'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void StartPrintJob (); 
fcns.name{fcnNum}='StartPrintJob'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void FinishPrintJob (); 
fcns.name{fcnNum}='FinishPrintJob'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintXdcr (); 
fcns.name{fcnNum}='PrintXdcr'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintHydrophone (); 
fcns.name{fcnNum}='PrintHydrophone'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintMedium (); 
fcns.name{fcnNum}='PrintMedium'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintOrientation (); 
fcns.name{fcnNum}='PrintOrientation'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintDistanceTracking (); 
fcns.name{fcnNum}='PrintDistanceTracking'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintComments (); 
fcns.name{fcnNum}='PrintComments'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintPosition (); 
fcns.name{fcnNum}='PrintPosition'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintScope (); 
fcns.name{fcnNum}='PrintScope'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintWaveformPlot (); 
fcns.name{fcnNum}='PrintWaveformPlot'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintWaveformPII (); 
fcns.name{fcnNum}='PrintWaveformPII'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintWaveformSpectrum (); 
fcns.name{fcnNum}='PrintWaveformSpectrum'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintWaveformFrequency (); 
fcns.name{fcnNum}='PrintWaveformFrequency'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintWaveformVoltages (); 
fcns.name{fcnNum}='PrintWaveformVoltages'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintWaveformIntensity (); 
fcns.name{fcnNum}='PrintWaveformIntensity'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintWaveformParameters (); 
fcns.name{fcnNum}='PrintWaveformParameters'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print1DScanPlot (); 
fcns.name{fcnNum}='Print1DScanPlot'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print1DScanWidth (); 
fcns.name{fcnNum}='Print1DScanWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print2DScanColor (); 
fcns.name{fcnNum}='Print2DScanColor'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print2DScanContour (); 
fcns.name{fcnNum}='Print2DScanContour'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print2DScanWireFrame (); 
fcns.name{fcnNum}='Print2DScanWireFrame'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print2DScanSlice (); 
fcns.name{fcnNum}='Print2DScanSlice'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print2DScanTransducerPower (); 
fcns.name{fcnNum}='Print2DScanTransducerPower'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Print2DScanWidth (); 
fcns.name{fcnNum}='Print2DScanWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintFreqScanRef (); 
fcns.name{fcnNum}='PrintFreqScanRef'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintFreqScanMeas (); 
fcns.name{fcnNum}='PrintFreqScanMeas'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void PrintFreqScanGain (); 
fcns.name{fcnNum}='PrintFreqScanGain'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void Pause ( long int value ); 
fcns.name{fcnNum}='Pause'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void MessageBox ( char * value , long int flags ); 
fcns.name{fcnNum}='MessageBox'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring', 'long'};fcnNum=fcnNum+1;
% void Copy (); 
fcns.name{fcnNum}='Copy'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetSoniqWindowLeft ( long int value ); 
fcns.name{fcnNum}='SetSoniqWindowLeft'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetSoniqWindowTop ( long int value ); 
fcns.name{fcnNum}='SetSoniqWindowTop'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetSoniqWindowWidth ( long int value ); 
fcns.name{fcnNum}='SetSoniqWindowWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetSoniqWindowHeight ( long int value ); 
fcns.name{fcnNum}='SetSoniqWindowHeight'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetSoniqWindowClientWidth ( long int value ); 
fcns.name{fcnNum}='SetSoniqWindowClientWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% void SetSoniqWindowClientHeight ( long int value ); 
fcns.name{fcnNum}='SetSoniqWindowClientHeight'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetSoniqWindowLeft (); 
fcns.name{fcnNum}='GetSoniqWindowLeft'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetSoniqWindowTop (); 
fcns.name{fcnNum}='GetSoniqWindowTop'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetSoniqWindowWidth (); 
fcns.name{fcnNum}='GetSoniqWindowWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetSoniqWindowHeight (); 
fcns.name{fcnNum}='GetSoniqWindowHeight'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetSoniqWindowClientWidth (); 
fcns.name{fcnNum}='GetSoniqWindowClientWidth'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetSoniqWindowClientHeight (); 
fcns.name{fcnNum}='GetSoniqWindowClientHeight'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void BringToFront (); 
fcns.name{fcnNum}='BringToFront'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SendToBack (); 
fcns.name{fcnNum}='SendToBack'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetSoniqVersion ( char * value ); 
fcns.name{fcnNum}='GetSoniqVersion'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void OutputToXLS (); 
fcns.name{fcnNum}='OutputToXLS'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long CreateOutputTable ( char * Z , char * X , char * Y , char * WF , char * ZX , char * TblFmt , char * Output ); 
fcns.name{fcnNum}='CreateOutputTable'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'cstring', 'cstring', 'cstring', 'cstring', 'cstring', 'cstring', 'cstring'};fcnNum=fcnNum+1;
% void SetScopeConfig ( char * ScopeType , char * ScopeAddr ); 
fcns.name{fcnNum}='SetScopeConfig'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring', 'cstring'};fcnNum=fcnNum+1;
% void GetScopeType ( char * value ); 
fcns.name{fcnNum}='GetScopeType'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void GetScopeAddr ( char * value ); 
fcns.name{fcnNum}='GetScopeAddr'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetPositionerConfig ( char * PositionerType , long int PositionerAddr ); 
fcns.name{fcnNum}='SetPositionerConfig'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring', 'long'};fcnNum=fcnNum+1;
% void GetPositionerType ( char * value ); 
fcns.name{fcnNum}='GetPositionerType'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% long GetPositionerAddr (); 
fcns.name{fcnNum}='GetPositionerAddr'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetWaterConditionerPort ( long int value ); 
fcns.name{fcnNum}='SetWaterConditionerPort'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetWaterConditionerPort (); 
fcns.name{fcnNum}='GetWaterConditionerPort'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void HydrophoneReadTXT ( char * value ); 
fcns.name{fcnNum}='HydrophoneReadTXT'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% int GetHydrophoneTabDataValid (); 
fcns.name{fcnNum}='GetHydrophoneTabDataValid'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetHydrophoneDataPointX ( long int index ); 
fcns.name{fcnNum}='GetHydrophoneDataPointX'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double GetHydrophoneDataPointY ( long int index ); 
fcns.name{fcnNum}='GetHydrophoneDataPointY'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% long GetHydrophoneTabDataCount (); 
fcns.name{fcnNum}='GetHydrophoneTabDataCount'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% double GetHydrophoneCalDate (); 
fcns.name{fcnNum}='GetHydrophoneCalDate'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void GetScopeReference ( char * value ); 
fcns.name{fcnNum}='GetScopeReference'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% void SetScopeReference ( char * value ); 
fcns.name{fcnNum}='SetScopeReference'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring'};fcnNum=fcnNum+1;
% int GetScopeConnected (); 
fcns.name{fcnNum}='GetScopeConnected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% int GetPositionerConnected (); 
fcns.name{fcnNum}='GetPositionerConnected'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% long GetTempSensorPort (); 
fcns.name{fcnNum}='GetTempSensorPort'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetTempSensorPort ( long int value ); 
fcns.name{fcnNum}='SetTempSensorPort'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'long'};fcnNum=fcnNum+1;
% double GetTempSensorTemperature (); 
fcns.name{fcnNum}='GetTempSensorTemperature'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SetBeamAlignmentUseAngularPositioner ( int value ); 
fcns.name{fcnNum}='SetBeamAlignmentUseAngularPositioner'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% int GetBeamAlignmentUseAngularPositioner (); 
fcns.name{fcnNum}='GetBeamAlignmentUseAngularPositioner'; fcns.calltype{fcnNum}='stdcall'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
methodinfo=fcns;